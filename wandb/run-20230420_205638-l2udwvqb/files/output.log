Some weights of the model checkpoint at microsoft/deberta-v3-large were not used when initializing DebertaV2Model: ['mask_predictions.LayerNorm.weight', 'lm_predictions.lm_head.dense.bias', 'lm_predictions.lm_head.bias', 'lm_predictions.lm_head.LayerNorm.weight', 'mask_predictions.classifier.bias', 'mask_predictions.dense.bias', 'mask_predictions.LayerNorm.bias', 'mask_predictions.dense.weight', 'lm_predictions.lm_head.dense.weight', 'lm_predictions.lm_head.LayerNorm.bias', 'mask_predictions.classifier.weight']
- This IS expected if you are initializing DebertaV2Model from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing DebertaV2Model from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
/home/qcqced/anaconda3/lib/python3.9/site-packages/transformers/optimization.py:306: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
  0%|                                                                                                                      | 0/1311 [00:00<?, ?it/s]
  grad_norm = torch.nn.utils.clip_grad_norm(                                                                               | 0/1311 [00:00<?, ?it/s]





































































































































































































































































































































































































































































































/home/qcqced/anaconda3/lib/python3.9/site-packages/torch/optim/lr_scheduler.py:265: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  warnings.warn("To get the last learning rate computed by the scheduler, "




























 99%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▌ | 383/388 [00:56<00:00,  6.96it/s]
[1/24] Train Loss: 0.6439999938011169
[1/24] Valid Loss: 0.5898000001907349
[1/24] Pearson Score: 0.7429
[1/24] Gradient Norm: 985.3795776367188
[1/24] lr: 8.333333333333334e-06
[Update] Valid Score : (-inf => 0.7429) Save Parameter

100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████| 388/388 [00:56<00:00,  6.96it/s]
[2/24] Train & Validation






















Traceback (most recent call last):                                                                                | 64/1311 [00:46<15:07,  1.37it/s]
  File "/home/qcqced/바탕화면/ML_Test/UPPPM/train.py", line 53, in <module>
    main('upppm_config.json', CFG)
  File "/home/qcqced/바탕화면/ML_Test/UPPPM/train.py", line 34, in main
    getattr(train_loop, cfg.loop)(cfg)  # init object
  File "/home/qcqced/바탕화면/ML_Test/UPPPM/trainer/train_loop.py", line 41, in train_loop
    train_loss, grad_norm, lr = train_input.train_fn(
  File "/home/qcqced/바탕화면/ML_Test/UPPPM/trainer/trainer.py", line 132, in train_fn
    scaler.scale(loss).backward()
  File "/home/qcqced/anaconda3/lib/python3.9/site-packages/torch/_tensor.py", line 487, in backward
    torch.autograd.backward(
  File "/home/qcqced/anaconda3/lib/python3.9/site-packages/torch/autograd/__init__.py", line 200, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt