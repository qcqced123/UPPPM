Some weights of the model checkpoint at microsoft/deberta-v3-large were not used when initializing DebertaV2Model: ['mask_predictions.dense.bias', 'mask_predictions.classifier.bias', 'lm_predictions.lm_head.bias', 'lm_predictions.lm_head.LayerNorm.weight', 'lm_predictions.lm_head.dense.weight', 'mask_predictions.LayerNorm.bias', 'mask_predictions.classifier.weight', 'mask_predictions.LayerNorm.weight', 'mask_predictions.dense.weight', 'lm_predictions.lm_head.dense.bias', 'lm_predictions.lm_head.LayerNorm.bias']
- This IS expected if you are initializing DebertaV2Model from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing DebertaV2Model from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
/home/qcqced/anaconda3/lib/python3.9/site-packages/transformers/optimization.py:306: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
  0%|                                                                                                                           | 0/84 [00:00<?, ?it/s]
  grad_norm = torch.nn.utils.clip_grad_norm(                                                                                    | 0/84 [00:00<?, ?it/s]
/home/qcqced/anaconda3/lib/python3.9/site-packages/torch/optim/lr_scheduler.py:139: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  warnings.warn("Detected call of `lr_scheduler.step()` before `optimizer.step()`. "


















































































/home/qcqced/anaconda3/lib/python3.9/site-packages/torch/optim/lr_scheduler.py:265: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  warnings.warn("To get the last learning rate computed by the scheduler, "


















100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 23/23 [00:38<00:00,  1.31s/it]
  0%|                                                                                                                           | 0/84 [00:00<?, ?it/s]
[1/20] Train Loss: 0.6693000197410583
[1/20] Valid Loss: 0.671999990940094
[1/20] Pearson Score: 0.3493
[1/20] Gradient Norm: 81336.9375
[1/20] lr: 2.5e-06
[Update] Valid Score : (-inf => 0.3493) Save Parameter
Best Score: 0.3492942857329903


















































































100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 84/84 [06:55<00:00,  4.85s/it]
















100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 23/23 [00:38<00:00,  1.31s/it]
[2/20] Train Loss: 0.6669999957084656
[2/20] Valid Loss: 0.66839998960495
[2/20] Pearson Score: 0.3505
[2/20] Gradient Norm: 60084.76953125
[2/20] lr: 5e-06
[Update] Valid Score : (0.3493 => 0.3505) Save Parameter
Best Score: 0.3505240426852804
  0%|                                                                                                                           | 0/84 [00:00<?, ?it/s]

Traceback (most recent call last):                                                                                      | 1/84 [00:05<06:55,  5.00s/it]
  File "/home/qcqced/바탕화면/ML_Test/UPPPM/train.py", line 53, in <module>
    main('upppm_config.json', CFG)
  File "/home/qcqced/바탕화면/ML_Test/UPPPM/train.py", line 34, in main
    getattr(train_loop, cfg.loop)(cfg)  # init object
  File "/home/qcqced/바탕화면/ML_Test/UPPPM/trainer/train_loop.py", line 41, in train_loop
    train_loss, grad_norm, lr = train_input.train_fn(
  File "/home/qcqced/바탕화면/ML_Test/UPPPM/trainer/trainer.py", line 132, in train_fn
    scaler.scale(loss).backward()
  File "/home/qcqced/anaconda3/lib/python3.9/site-packages/torch/_tensor.py", line 487, in backward
    torch.autograd.backward(
  File "/home/qcqced/anaconda3/lib/python3.9/site-packages/torch/autograd/__init__.py", line 200, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt