Some weights of the model checkpoint at microsoft/deberta-v3-large were not used when initializing DebertaV2Model: ['mask_predictions.dense.bias', 'lm_predictions.lm_head.dense.bias', 'lm_predictions.lm_head.LayerNorm.weight', 'mask_predictions.classifier.bias', 'mask_predictions.LayerNorm.weight', 'mask_predictions.LayerNorm.bias', 'lm_predictions.lm_head.dense.weight', 'mask_predictions.dense.weight', 'lm_predictions.lm_head.bias', 'lm_predictions.lm_head.LayerNorm.bias', 'mask_predictions.classifier.weight']
- This IS expected if you are initializing DebertaV2Model from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing DebertaV2Model from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
/home/qcqced/anaconda3/lib/python3.9/site-packages/transformers/optimization.py:306: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
                                                                                                                                                    /home/qcqced/바탕화면/ML_Test/UPPPM/trainer/trainer.py:141: UserWarning: torch.nn.utils.clip_grad_norm is now deprecated in favor of torch.nn.utils.clip_grad_norm_.
  grad_norm = torch.nn.utils.clip_grad_norm(                                                                               | 0/1273 [00:00<?, ?it/s]
  0%|                                                                                                              | 1/1273 [00:01<24:19,  1.15s/it]

















































































































































































































































































































































































































































































/home/qcqced/anaconda3/lib/python3.9/site-packages/torch/optim/lr_scheduler.py:265: UserWarning: To get the last learning rate computed by the scheduler, please use `get_last_lr()`.
  warnings.warn("To get the last learning rate computed by the scheduler, "































 99%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▉ | 422/426 [01:03<00:00,  6.67it/s]
[1/12] Train Loss: 0.6263999938964844
[1/12] Valid Loss: 0.6478000283241272
[1/12] Pearson Score: 0.6428
[1/12] Gradient Norm: 948.5562133789062
[1/12] lr: 4.1666666666666665e-05
[Update] Valid Score : (-inf => 0.6428) Save Parameter
Best Score: 0.642804734658602
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████| 426/426 [01:04<00:00,  7.10it/s]















































































































































































































































































































































































































































































100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████| 1273/1273 [15:27<00:00,  1.30it/s]































 98%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▏ | 419/426 [01:03<00:01,  6.44it/s]
[2/12] Train Loss: 0.5888000130653381
[2/12] Valid Loss: 0.5873000025749207
[2/12] Pearson Score: 0.772
[2/12] Gradient Norm: 1001.4550170898438
[2/12] lr: 4.734081600808531e-05
[Update] Valid Score : (0.6428 => 0.7720) Save Parameter

100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████| 426/426 [01:04<00:00,  6.73it/s]
[3/12] Train & Validation













































































































































































































































































































































































































































































100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████| 1273/1273 [15:26<00:00,  1.40it/s]






























 99%|███████████████████████████████████████████████████████████████████████████████████████████████████████████▋ | 421/426 [00:59<00:00,  6.94it/s]
[3/12] Train Loss: 0.6728000044822693
[3/12] Valid Loss: 0.6710000038146973
[3/12] Pearson Score: -0.0381
[3/12] Gradient Norm: 970.1350708007812
[3/12] lr: 3.7500000000000003e-05
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████| 426/426 [01:00<00:00,  7.36it/s]
























































Traceback (most recent call last):                                                                               | 157/1273 [01:54<13:20,  1.39it/s]
  File "/home/qcqced/바탕화면/ML_Test/UPPPM/train.py", line 53, in <module>
    # cli_config = ConfigParser.from_args(args, options)
  File "/home/qcqced/바탕화면/ML_Test/UPPPM/train.py", line 34, in main
    else:
  File "/home/qcqced/바탕화면/ML_Test/UPPPM/trainer/train_loop.py", line 41, in train_loop
    train_loss, grad_norm, lr = train_input.train_fn(
  File "/home/qcqced/바탕화면/ML_Test/UPPPM/trainer/trainer.py", line 132, in train_fn
    scaler.scale(loss).backward()
  File "/home/qcqced/anaconda3/lib/python3.9/site-packages/torch/_tensor.py", line 487, in backward
    torch.autograd.backward(
  File "/home/qcqced/anaconda3/lib/python3.9/site-packages/torch/autograd/__init__.py", line 200, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt